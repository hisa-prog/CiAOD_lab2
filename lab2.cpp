#include <iostream>
#include <fstream>
#include "Queue.h"
using namespace vz_struct;

//Структуры и алгоритмы обработки данных.Стеки, очереди.Лаб.раб. 2
//Напишите программу, которая читает из файла последовательность целых чисел 
//и помещает все четные числа в одну очередь, а нечетные – в другую.
//Содержимое каждой очереди распечатать.
//Для реализации АТД Очередь использовать динамическое распределение памяти.
//
//Под динамическим распределением нужно понимать организацию очереди на списке.
//Смотрите файл методических указаний по ЛР.
//Вариант с динамическим массивом принят не будет.
//

int main()
{
	setlocale(LC_ALL, "Russian");

	int number;

	std::cout << "Задание лабораторной работы №2:\n";
	std::cout << "Напишите программу, которая читает из файла последовательность целых чисел\n";
	std::cout << "и помещает все четные числа в одну очередь, а нечетные – в другую.\n";
	std::cout << "Содержимое каждой очереди распечатать.\n";
	std::cout << "Для реализации АТД Очередь использовать динамическое распределение памяти.\n";
	std::cout << "\n";

	std::cout << "\n\nОткрываем файл для чтения!";
	std::ifstream FileIn("Enter.txt"); //открыли файл для чтения.

	if (FileIn.is_open())
		std::cout << "\nФайл успешно открыт!";
	else {
		std::cout << "\nФайл не был открыт!";
		return 1;
	}

	Queue even = Queue();
	Queue odd = Queue();

	std::cout << "\n\nЧисла, хранящиеся в файле ENTER: \n";
	while (!FileIn.eof())
	{
		FileIn >> number;
		std::cout << number << " ";
		if (number % 2 == 0)
		{
			even.EnQueue(number);
		}
		else odd.EnQueue(number);
	}

	std::cout << "\n\nЗакрываем файл!";
	FileIn.close(); //  закрываем файл

	std::cout << "\nВсе числа, из очереди, которая хранила четные числа: \n";
	while (!even.isEmpty())
	{
		std::cout << even.DeQueue() << " ";
	}

	std::cout << "\nВсе числа, из очереди, которая хранила нечетные числа: \n";
	while (!odd.isEmpty())
	{
		std::cout << odd.DeQueue() << " ";
	}

	system("pause");

	return 0;
}
